|graphicstest
CLOCK_50 => CLOCK_50.IN1
KEY[0] => resetn.IN4
KEY[1] => KEY[1].IN2
KEY[2] => ~NO_FANOUT~
KEY[3] => writeEn.IN2
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
LEDR[0] << <GND>
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
VGA_CLK << vga_adapter:VGA.VGA_CLK
VGA_HS << vga_adapter:VGA.VGA_HS
VGA_VS << vga_adapter:VGA.VGA_VS
VGA_BLANK_N << vga_adapter:VGA.VGA_BLANK
VGA_SYNC_N << vga_adapter:VGA.VGA_SYNC
VGA_R[0] << vga_adapter:VGA.VGA_R
VGA_R[1] << vga_adapter:VGA.VGA_R
VGA_R[2] << vga_adapter:VGA.VGA_R
VGA_R[3] << vga_adapter:VGA.VGA_R
VGA_R[4] << vga_adapter:VGA.VGA_R
VGA_R[5] << vga_adapter:VGA.VGA_R
VGA_R[6] << vga_adapter:VGA.VGA_R
VGA_R[7] << vga_adapter:VGA.VGA_R
VGA_R[8] << vga_adapter:VGA.VGA_R
VGA_R[9] << vga_adapter:VGA.VGA_R
VGA_G[0] << vga_adapter:VGA.VGA_G
VGA_G[1] << vga_adapter:VGA.VGA_G
VGA_G[2] << vga_adapter:VGA.VGA_G
VGA_G[3] << vga_adapter:VGA.VGA_G
VGA_G[4] << vga_adapter:VGA.VGA_G
VGA_G[5] << vga_adapter:VGA.VGA_G
VGA_G[6] << vga_adapter:VGA.VGA_G
VGA_G[7] << vga_adapter:VGA.VGA_G
VGA_G[8] << vga_adapter:VGA.VGA_G
VGA_G[9] << vga_adapter:VGA.VGA_G
VGA_B[0] << vga_adapter:VGA.VGA_B
VGA_B[1] << vga_adapter:VGA.VGA_B
VGA_B[2] << vga_adapter:VGA.VGA_B
VGA_B[3] << vga_adapter:VGA.VGA_B
VGA_B[4] << vga_adapter:VGA.VGA_B
VGA_B[5] << vga_adapter:VGA.VGA_B
VGA_B[6] << vga_adapter:VGA.VGA_B
VGA_B[7] << vga_adapter:VGA.VGA_B
VGA_B[8] << vga_adapter:VGA.VGA_B
VGA_B[9] << vga_adapter:VGA.VGA_B


|graphicstest|vga_adapter:VGA
resetn => resetn.IN1
clock => clock.IN2
colour[0] => colour[0].IN1
colour[1] => colour[1].IN1
colour[2] => colour[2].IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
plot => writeEn.IN1
VGA_R[0] <= vga_controller:controller.VGA_R
VGA_R[1] <= vga_controller:controller.VGA_R
VGA_R[2] <= vga_controller:controller.VGA_R
VGA_R[3] <= vga_controller:controller.VGA_R
VGA_R[4] <= vga_controller:controller.VGA_R
VGA_R[5] <= vga_controller:controller.VGA_R
VGA_R[6] <= vga_controller:controller.VGA_R
VGA_R[7] <= vga_controller:controller.VGA_R
VGA_R[8] <= vga_controller:controller.VGA_R
VGA_R[9] <= vga_controller:controller.VGA_R
VGA_G[0] <= vga_controller:controller.VGA_G
VGA_G[1] <= vga_controller:controller.VGA_G
VGA_G[2] <= vga_controller:controller.VGA_G
VGA_G[3] <= vga_controller:controller.VGA_G
VGA_G[4] <= vga_controller:controller.VGA_G
VGA_G[5] <= vga_controller:controller.VGA_G
VGA_G[6] <= vga_controller:controller.VGA_G
VGA_G[7] <= vga_controller:controller.VGA_G
VGA_G[8] <= vga_controller:controller.VGA_G
VGA_G[9] <= vga_controller:controller.VGA_G
VGA_B[0] <= vga_controller:controller.VGA_B
VGA_B[1] <= vga_controller:controller.VGA_B
VGA_B[2] <= vga_controller:controller.VGA_B
VGA_B[3] <= vga_controller:controller.VGA_B
VGA_B[4] <= vga_controller:controller.VGA_B
VGA_B[5] <= vga_controller:controller.VGA_B
VGA_B[6] <= vga_controller:controller.VGA_B
VGA_B[7] <= vga_controller:controller.VGA_B
VGA_B[8] <= vga_controller:controller.VGA_B
VGA_B[9] <= vga_controller:controller.VGA_B
VGA_HS <= vga_controller:controller.VGA_HS
VGA_VS <= vga_controller:controller.VGA_VS
VGA_BLANK <= vga_controller:controller.VGA_BLANK
VGA_SYNC <= vga_controller:controller.VGA_SYNC
VGA_CLK <= vga_controller:controller.VGA_CLK


|graphicstest|vga_adapter:VGA|vga_address_translator:user_input_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|graphicstest|vga_adapter:VGA|altsyncram:VideoMemory
wren_a => altsyncram_60g1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_60g1:auto_generated.data_a[0]
data_a[1] => altsyncram_60g1:auto_generated.data_a[1]
data_a[2] => altsyncram_60g1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
address_a[0] => altsyncram_60g1:auto_generated.address_a[0]
address_a[1] => altsyncram_60g1:auto_generated.address_a[1]
address_a[2] => altsyncram_60g1:auto_generated.address_a[2]
address_a[3] => altsyncram_60g1:auto_generated.address_a[3]
address_a[4] => altsyncram_60g1:auto_generated.address_a[4]
address_a[5] => altsyncram_60g1:auto_generated.address_a[5]
address_a[6] => altsyncram_60g1:auto_generated.address_a[6]
address_a[7] => altsyncram_60g1:auto_generated.address_a[7]
address_a[8] => altsyncram_60g1:auto_generated.address_a[8]
address_a[9] => altsyncram_60g1:auto_generated.address_a[9]
address_a[10] => altsyncram_60g1:auto_generated.address_a[10]
address_a[11] => altsyncram_60g1:auto_generated.address_a[11]
address_a[12] => altsyncram_60g1:auto_generated.address_a[12]
address_a[13] => altsyncram_60g1:auto_generated.address_a[13]
address_a[14] => altsyncram_60g1:auto_generated.address_a[14]
address_b[0] => altsyncram_60g1:auto_generated.address_b[0]
address_b[1] => altsyncram_60g1:auto_generated.address_b[1]
address_b[2] => altsyncram_60g1:auto_generated.address_b[2]
address_b[3] => altsyncram_60g1:auto_generated.address_b[3]
address_b[4] => altsyncram_60g1:auto_generated.address_b[4]
address_b[5] => altsyncram_60g1:auto_generated.address_b[5]
address_b[6] => altsyncram_60g1:auto_generated.address_b[6]
address_b[7] => altsyncram_60g1:auto_generated.address_b[7]
address_b[8] => altsyncram_60g1:auto_generated.address_b[8]
address_b[9] => altsyncram_60g1:auto_generated.address_b[9]
address_b[10] => altsyncram_60g1:auto_generated.address_b[10]
address_b[11] => altsyncram_60g1:auto_generated.address_b[11]
address_b[12] => altsyncram_60g1:auto_generated.address_b[12]
address_b[13] => altsyncram_60g1:auto_generated.address_b[13]
address_b[14] => altsyncram_60g1:auto_generated.address_b[14]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_60g1:auto_generated.clock0
clock1 => altsyncram_60g1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_b[0] <= altsyncram_60g1:auto_generated.q_b[0]
q_b[1] <= altsyncram_60g1:auto_generated.q_b[1]
q_b[2] <= altsyncram_60g1:auto_generated.q_b[2]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|graphicstest|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_60g1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[13] => decode_lsa:decode2.data[0]
address_a[13] => decode_lsa:wren_decode_a.data[0]
address_a[14] => decode_lsa:decode2.data[1]
address_a[14] => decode_lsa:wren_decode_a.data[1]
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[6] => ram_block1a8.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[7] => ram_block1a8.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[8] => ram_block1a8.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
address_b[9] => ram_block1a8.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
address_b[10] => ram_block1a6.PORTBADDR10
address_b[10] => ram_block1a7.PORTBADDR10
address_b[10] => ram_block1a8.PORTBADDR10
address_b[11] => ram_block1a0.PORTBADDR11
address_b[11] => ram_block1a1.PORTBADDR11
address_b[11] => ram_block1a2.PORTBADDR11
address_b[11] => ram_block1a3.PORTBADDR11
address_b[11] => ram_block1a4.PORTBADDR11
address_b[11] => ram_block1a5.PORTBADDR11
address_b[11] => ram_block1a6.PORTBADDR11
address_b[11] => ram_block1a7.PORTBADDR11
address_b[11] => ram_block1a8.PORTBADDR11
address_b[12] => ram_block1a0.PORTBADDR12
address_b[12] => ram_block1a1.PORTBADDR12
address_b[12] => ram_block1a2.PORTBADDR12
address_b[12] => ram_block1a3.PORTBADDR12
address_b[12] => ram_block1a4.PORTBADDR12
address_b[12] => ram_block1a5.PORTBADDR12
address_b[13] => address_reg_b[0].DATAIN
address_b[13] => decode_e8a:rden_decode_b.data[0]
address_b[14] => address_reg_b[1].DATAIN
address_b[14] => decode_e8a:rden_decode_b.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => address_reg_b[1].CLK
clock1 => address_reg_b[0].CLK
clock1 => out_address_reg_b[1].CLK
clock1 => out_address_reg_b[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
q_b[0] <= mux_0nb:mux3.result[0]
q_b[1] <= mux_0nb:mux3.result[1]
q_b[2] <= mux_0nb:mux3.result[2]
wren_a => decode_lsa:decode2.enable
wren_a => decode_lsa:wren_decode_a.enable


|graphicstest|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_60g1:auto_generated|decode_lsa:decode2
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|graphicstest|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_60g1:auto_generated|decode_e8a:rden_decode_b
data[0] => w_anode143w[1].IN0
data[0] => w_anode157w[1].IN1
data[0] => w_anode166w[1].IN0
data[0] => w_anode175w[1].IN1
data[1] => w_anode143w[2].IN0
data[1] => w_anode157w[2].IN0
data[1] => w_anode166w[2].IN1
data[1] => w_anode175w[2].IN1
eq[0] <= w_anode143w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode157w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode166w[2].DB_MAX_OUTPUT_PORT_TYPE


|graphicstest|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_60g1:auto_generated|decode_lsa:wren_decode_a
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|graphicstest|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_60g1:auto_generated|mux_0nb:mux3
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data0_wire[2].IN0
data[3] => data1_wire[0].IN0
data[4] => data1_wire[1].IN0
data[5] => data1_wire[2].IN0
data[6] => data2_wire[0].IN0
data[7] => data2_wire[1].IN0
data[8] => data2_wire[2].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[2].IN0
sel[0] => data1_wire[2].IN1
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[2].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|graphicstest|vga_adapter:VGA|vga_pll:mypll
clock_in => clock_input_bus[0].IN1
clock_out <= altpll:altpll_component.clk


|graphicstest|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => pll.CLK1
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|graphicstest|vga_adapter:VGA|vga_controller:controller
vga_clock => VGA_BLANK~reg0.CLK
vga_clock => VGA_VS~reg0.CLK
vga_clock => VGA_HS~reg0.CLK
vga_clock => VGA_BLANK1.CLK
vga_clock => VGA_VS1.CLK
vga_clock => VGA_HS1.CLK
vga_clock => yCounter[0].CLK
vga_clock => yCounter[1].CLK
vga_clock => yCounter[2].CLK
vga_clock => yCounter[3].CLK
vga_clock => yCounter[4].CLK
vga_clock => yCounter[5].CLK
vga_clock => yCounter[6].CLK
vga_clock => yCounter[7].CLK
vga_clock => yCounter[8].CLK
vga_clock => yCounter[9].CLK
vga_clock => xCounter[0].CLK
vga_clock => xCounter[1].CLK
vga_clock => xCounter[2].CLK
vga_clock => xCounter[3].CLK
vga_clock => xCounter[4].CLK
vga_clock => xCounter[5].CLK
vga_clock => xCounter[6].CLK
vga_clock => xCounter[7].CLK
vga_clock => xCounter[8].CLK
vga_clock => xCounter[9].CLK
vga_clock => VGA_CLK.DATAIN
resetn => xCounter[0].ACLR
resetn => xCounter[1].ACLR
resetn => xCounter[2].ACLR
resetn => xCounter[3].ACLR
resetn => xCounter[4].ACLR
resetn => xCounter[5].ACLR
resetn => xCounter[6].ACLR
resetn => xCounter[7].ACLR
resetn => xCounter[8].ACLR
resetn => xCounter[9].ACLR
resetn => yCounter[0].ACLR
resetn => yCounter[1].ACLR
resetn => yCounter[2].ACLR
resetn => yCounter[3].ACLR
resetn => yCounter[4].ACLR
resetn => yCounter[5].ACLR
resetn => yCounter[6].ACLR
resetn => yCounter[7].ACLR
resetn => yCounter[8].ACLR
resetn => yCounter[9].ACLR
pixel_colour[0] => VGA_B[0].DATAIN
pixel_colour[0] => VGA_B[9].DATAIN
pixel_colour[0] => VGA_B[8].DATAIN
pixel_colour[0] => VGA_B[7].DATAIN
pixel_colour[0] => VGA_B[6].DATAIN
pixel_colour[0] => VGA_B[5].DATAIN
pixel_colour[0] => VGA_B[4].DATAIN
pixel_colour[0] => VGA_B[3].DATAIN
pixel_colour[0] => VGA_B[2].DATAIN
pixel_colour[0] => VGA_B[1].DATAIN
pixel_colour[1] => VGA_G[0].DATAIN
pixel_colour[1] => VGA_G[9].DATAIN
pixel_colour[1] => VGA_G[8].DATAIN
pixel_colour[1] => VGA_G[7].DATAIN
pixel_colour[1] => VGA_G[6].DATAIN
pixel_colour[1] => VGA_G[5].DATAIN
pixel_colour[1] => VGA_G[4].DATAIN
pixel_colour[1] => VGA_G[3].DATAIN
pixel_colour[1] => VGA_G[2].DATAIN
pixel_colour[1] => VGA_G[1].DATAIN
pixel_colour[2] => VGA_R[0].DATAIN
pixel_colour[2] => VGA_R[9].DATAIN
pixel_colour[2] => VGA_R[8].DATAIN
pixel_colour[2] => VGA_R[7].DATAIN
pixel_colour[2] => VGA_R[6].DATAIN
pixel_colour[2] => VGA_R[5].DATAIN
pixel_colour[2] => VGA_R[4].DATAIN
pixel_colour[2] => VGA_R[3].DATAIN
pixel_colour[2] => VGA_R[2].DATAIN
pixel_colour[2] => VGA_R[1].DATAIN
memory_address[0] <= vga_address_translator:controller_translator.mem_address
memory_address[1] <= vga_address_translator:controller_translator.mem_address
memory_address[2] <= vga_address_translator:controller_translator.mem_address
memory_address[3] <= vga_address_translator:controller_translator.mem_address
memory_address[4] <= vga_address_translator:controller_translator.mem_address
memory_address[5] <= vga_address_translator:controller_translator.mem_address
memory_address[6] <= vga_address_translator:controller_translator.mem_address
memory_address[7] <= vga_address_translator:controller_translator.mem_address
memory_address[8] <= vga_address_translator:controller_translator.mem_address
memory_address[9] <= vga_address_translator:controller_translator.mem_address
memory_address[10] <= vga_address_translator:controller_translator.mem_address
memory_address[11] <= vga_address_translator:controller_translator.mem_address
memory_address[12] <= vga_address_translator:controller_translator.mem_address
memory_address[13] <= vga_address_translator:controller_translator.mem_address
memory_address[14] <= vga_address_translator:controller_translator.mem_address
VGA_R[0] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[0] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= VGA_VS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK <= VGA_BLANK~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC <= <VCC>
VGA_CLK <= vga_clock.DB_MAX_OUTPUT_PORT_TYPE


|graphicstest|vga_adapter:VGA|vga_controller:controller|vga_address_translator:controller_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|graphicstest|counteroffset:lineface
resetn => always0.IN1
startn => always0.IN1
current_state[0] => Equal0.IN5
current_state[1] => Equal0.IN4
current_state[2] => Equal0.IN3
current_state[3] => Equal0.IN2
current_state[4] => Equal0.IN1
current_state[5] => Equal0.IN0
edge_go => offset.OUTPUTSELECT
edge_go => offset.OUTPUTSELECT
edge_go => offset.OUTPUTSELECT
edge_go => offset.OUTPUTSELECT
edge_go => offset.OUTPUTSELECT
edge_go => offset.OUTPUTSELECT
offset_increase => offset.OUTPUTSELECT
offset_increase => offset.OUTPUTSELECT
offset_increase => offset.OUTPUTSELECT
offset_increase => offset.OUTPUTSELECT
offset_increase => offset.OUTPUTSELECT
offset_increase => offset.OUTPUTSELECT
clk => offset[0]~reg0.CLK
clk => offset[1]~reg0.CLK
clk => offset[2]~reg0.CLK
clk => offset[3]~reg0.CLK
clk => offset[4]~reg0.CLK
clk => offset[5]~reg0.CLK
offset[0] <= offset[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
offset[1] <= offset[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
offset[2] <= offset[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
offset[3] <= offset[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
offset[4] <= offset[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
offset[5] <= offset[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|graphicstest|sickomode:pickandroll
clk => clk.IN3
resetn => resetn.IN1
start => ~NO_FANOUT~
startdraw => startdraw.IN1
offset[0] => offset[0].IN2
offset[1] => offset[1].IN2
offset[2] => offset[2].IN2
offset[3] => offset[3].IN2
offset[4] => offset[4].IN2
offset[5] => offset[5].IN2
lane_1[0] => lane_1[0].IN1
lane_1[1] => lane_1[1].IN1
lane_1[2] => lane_1[2].IN1
master_state[0] => master_state[0].IN1
master_state[1] => master_state[1].IN1
master_state[2] => master_state[2].IN1
master_state[3] => master_state[3].IN1
master_state[4] => master_state[4].IN1
master_state[5] => master_state[5].IN1
all_done <= display_controller:controller.all_done
x_out[0] <= display_controller:controller.x_out
x_out[1] <= display_controller:controller.x_out
x_out[2] <= display_controller:controller.x_out
x_out[3] <= display_controller:controller.x_out
x_out[4] <= display_controller:controller.x_out
x_out[5] <= display_controller:controller.x_out
x_out[6] <= display_controller:controller.x_out
x_out[7] <= display_controller:controller.x_out
x_out[8] <= display_controller:controller.x_out
y_out[0] <= display_controller:controller.y_out
y_out[1] <= display_controller:controller.y_out
y_out[2] <= display_controller:controller.y_out
y_out[3] <= display_controller:controller.y_out
y_out[4] <= display_controller:controller.y_out
y_out[5] <= display_controller:controller.y_out
y_out[6] <= display_controller:controller.y_out
y_out[7] <= display_controller:controller.y_out
c_out[0] <= display_controller:controller.c_out
c_out[1] <= display_controller:controller.c_out
c_out[2] <= display_controller:controller.c_out
testing[0] <= <GND>
testing[1] <= <GND>
testing[2] <= <GND>


|graphicstest|sickomode:pickandroll|draw:drawlane1
clk => c_out~reg0.CLK
clk => finish_draw~reg0.CLK
clk => x_out[0]~reg0.CLK
clk => x_out[1]~reg0.CLK
clk => x_out[2]~reg0.CLK
clk => x_out[3]~reg0.CLK
clk => x_out[4]~reg0.CLK
clk => x_out[5]~reg0.CLK
clk => x_out[6]~reg0.CLK
clk => x_out[7]~reg0.CLK
clk => x_out[8]~reg0.CLK
startdraw => x_out.OUTPUTSELECT
startdraw => x_out.OUTPUTSELECT
startdraw => x_out.OUTPUTSELECT
startdraw => x_out.OUTPUTSELECT
startdraw => x_out.OUTPUTSELECT
startdraw => x_out.OUTPUTSELECT
startdraw => x_out.OUTPUTSELECT
startdraw => x_out.OUTPUTSELECT
startdraw => x_out.OUTPUTSELECT
startdraw => finish_draw.OUTPUTSELECT
startdraw => c_out~reg0.ENA
lane_number[0] => Add1.IN16
lane_number[0] => Add0.IN6
lane_number[1] => Add1.IN15
lane_number[1] => Add0.IN5
lane_number[2] => Add0.IN3
lane_number[2] => Add0.IN4
lane_above[0] => Decoder0.IN2
lane_above[0] => Decoder1.IN1
lane_above[0] => Mux0.IN10
lane_above[0] => Mux1.IN6
lane_above[0] => Mux2.IN6
lane_above[0] => Mux3.IN6
lane_above[0] => Mux4.IN6
lane_above[0] => Mux5.IN6
lane_above[0] => Mux6.IN6
lane_above[0] => Mux7.IN6
lane_above[0] => Mux8.IN6
lane_above[0] => Mux9.IN6
lane_above[1] => Decoder0.IN1
lane_above[1] => Mux0.IN9
lane_above[1] => Mux1.IN5
lane_above[1] => Mux2.IN5
lane_above[1] => Mux3.IN5
lane_above[1] => Mux4.IN5
lane_above[1] => Mux5.IN5
lane_above[1] => Mux6.IN5
lane_above[1] => Mux7.IN5
lane_above[1] => Mux8.IN5
lane_above[1] => Mux9.IN5
lane_above[2] => Decoder0.IN0
lane_above[2] => Decoder1.IN0
lane_above[2] => Mux0.IN8
lane_above[2] => Mux1.IN4
lane_above[2] => Mux2.IN4
lane_above[2] => Mux3.IN4
lane_above[2] => Mux4.IN4
lane_above[2] => Mux5.IN4
lane_above[2] => Mux6.IN4
lane_above[2] => Mux7.IN4
lane_above[2] => Mux8.IN4
lane_above[2] => Mux9.IN4
offset[0] => Add1.IN11
offset[1] => Add1.IN10
offset[2] => Add1.IN9
offset[3] => Add1.IN8
offset[4] => Add1.IN7
offset[5] => Add1.IN6
x_out[0] <= x_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[1] <= x_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[2] <= x_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[3] <= x_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[4] <= x_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[5] <= x_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[6] <= x_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[7] <= x_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[8] <= x_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_out[0] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[1] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[2] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[3] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[4] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
finish_draw <= finish_draw~reg0.DB_MAX_OUTPUT_PORT_TYPE
c_out <= c_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|graphicstest|sickomode:pickandroll|erase:eraselane1
clk => erase_done~reg0.CLK
clk => x_out[0]~reg0.CLK
clk => x_out[1]~reg0.CLK
clk => x_out[2]~reg0.CLK
clk => x_out[3]~reg0.CLK
clk => x_out[4]~reg0.CLK
clk => x_out[5]~reg0.CLK
clk => x_out[6]~reg0.CLK
clk => x_out[7]~reg0.CLK
clk => x_out[8]~reg0.CLK
start_erase => x_out.OUTPUTSELECT
start_erase => x_out.OUTPUTSELECT
start_erase => x_out.OUTPUTSELECT
start_erase => x_out.OUTPUTSELECT
start_erase => x_out.OUTPUTSELECT
start_erase => x_out.OUTPUTSELECT
start_erase => x_out.OUTPUTSELECT
start_erase => x_out.OUTPUTSELECT
start_erase => x_out.OUTPUTSELECT
start_erase => erase_done.OUTPUTSELECT
row_id[0] => Add1.IN16
row_id[0] => Add0.IN8
row_id[1] => Add1.IN15
row_id[1] => Add0.IN7
row_id[2] => Add0.IN5
row_id[2] => Add0.IN6
row_id[3] => Add0.IN3
row_id[3] => Add0.IN4
row_below[0] => Decoder0.IN2
row_below[0] => Decoder1.IN1
row_below[0] => Mux0.IN10
row_below[0] => Mux1.IN6
row_below[0] => Mux2.IN6
row_below[0] => Mux3.IN6
row_below[0] => Mux4.IN6
row_below[0] => Mux5.IN6
row_below[0] => Mux6.IN6
row_below[0] => Mux7.IN6
row_below[0] => Mux8.IN6
row_below[0] => Mux9.IN6
row_below[1] => Decoder0.IN1
row_below[1] => Mux0.IN9
row_below[1] => Mux1.IN5
row_below[1] => Mux2.IN5
row_below[1] => Mux3.IN5
row_below[1] => Mux4.IN5
row_below[1] => Mux5.IN5
row_below[1] => Mux6.IN5
row_below[1] => Mux7.IN5
row_below[1] => Mux8.IN5
row_below[1] => Mux9.IN5
row_below[2] => Decoder0.IN0
row_below[2] => Decoder1.IN0
row_below[2] => Mux0.IN8
row_below[2] => Mux1.IN4
row_below[2] => Mux2.IN4
row_below[2] => Mux3.IN4
row_below[2] => Mux4.IN4
row_below[2] => Mux5.IN4
row_below[2] => Mux6.IN4
row_below[2] => Mux7.IN4
row_below[2] => Mux8.IN4
row_below[2] => Mux9.IN4
offset[0] => Add1.IN11
offset[1] => Add1.IN10
offset[2] => Add1.IN9
offset[3] => Add1.IN8
offset[4] => Add1.IN7
offset[5] => Add1.IN6
x_out[0] <= x_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[1] <= x_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[2] <= x_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[3] <= x_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[4] <= x_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[5] <= x_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[6] <= x_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[7] <= x_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[8] <= x_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_out[0] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[1] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[2] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[3] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[4] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
y_out[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
erase_done <= erase_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
c_out <= <GND>


|graphicstest|sickomode:pickandroll|display_controller:controller
clk => curr_state~1.DATAIN
resetn => always2.IN1
start => always2.IN1
startdraw => Selector1.IN3
startdraw => Selector3.IN2
startdraw => Selector0.IN1
row_draw_done => Selector3.IN3
row_draw_done => Selector2.IN1
row_erase_done => Selector2.IN3
row_erase_done => Selector1.IN1
draw_color => ~NO_FANOUT~
erase_color => ~NO_FANOUT~
draw_rowx1[0] => Selector11.IN2
draw_rowx1[1] => Selector10.IN2
draw_rowx1[2] => Selector9.IN2
draw_rowx1[3] => Selector8.IN2
draw_rowx1[4] => Selector7.IN2
draw_rowx1[5] => Selector6.IN2
draw_rowx1[6] => Selector5.IN2
draw_rowx1[7] => Selector4.IN2
erase_rowx1[0] => Selector11.IN3
erase_rowx1[1] => Selector10.IN3
erase_rowx1[2] => Selector9.IN3
erase_rowx1[3] => Selector8.IN3
erase_rowx1[4] => Selector7.IN3
erase_rowx1[5] => Selector6.IN3
erase_rowx1[6] => Selector5.IN3
erase_rowx1[7] => Selector4.IN3
draw_rowy1[0] => Selector19.IN2
draw_rowy1[1] => Selector18.IN2
draw_rowy1[2] => Selector17.IN2
draw_rowy1[3] => Selector16.IN2
draw_rowy1[4] => Selector15.IN2
draw_rowy1[5] => Selector14.IN2
draw_rowy1[6] => Selector13.IN2
draw_rowy1[7] => Selector12.IN2
draw_rowy1[8] => ~NO_FANOUT~
erase_rowy1[0] => Selector19.IN3
erase_rowy1[1] => Selector18.IN3
erase_rowy1[2] => Selector17.IN3
erase_rowy1[3] => Selector16.IN3
erase_rowy1[4] => Selector15.IN3
erase_rowy1[5] => Selector14.IN3
erase_rowy1[6] => Selector13.IN3
erase_rowy1[7] => Selector12.IN3
erase_rowy1[8] => ~NO_FANOUT~
master_state[0] => Equal0.IN5
master_state[1] => Equal0.IN4
master_state[2] => Equal0.IN3
master_state[3] => Equal0.IN2
master_state[4] => Equal0.IN1
master_state[5] => Equal0.IN0
go_draw <= <VCC>
go_erase <= <VCC>
x_out[0] <= Selector11.DB_MAX_OUTPUT_PORT_TYPE
x_out[1] <= Selector10.DB_MAX_OUTPUT_PORT_TYPE
x_out[2] <= Selector9.DB_MAX_OUTPUT_PORT_TYPE
x_out[3] <= Selector8.DB_MAX_OUTPUT_PORT_TYPE
x_out[4] <= Selector7.DB_MAX_OUTPUT_PORT_TYPE
x_out[5] <= Selector6.DB_MAX_OUTPUT_PORT_TYPE
x_out[6] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
x_out[7] <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
x_out[8] <= <GND>
y_out[0] <= Selector19.DB_MAX_OUTPUT_PORT_TYPE
y_out[1] <= Selector18.DB_MAX_OUTPUT_PORT_TYPE
y_out[2] <= Selector17.DB_MAX_OUTPUT_PORT_TYPE
y_out[3] <= Selector16.DB_MAX_OUTPUT_PORT_TYPE
y_out[4] <= Selector15.DB_MAX_OUTPUT_PORT_TYPE
y_out[5] <= Selector14.DB_MAX_OUTPUT_PORT_TYPE
y_out[6] <= Selector13.DB_MAX_OUTPUT_PORT_TYPE
y_out[7] <= Selector12.DB_MAX_OUTPUT_PORT_TYPE
c_out[0] <= c_out[0].DB_MAX_OUTPUT_PORT_TYPE
c_out[1] <= c_out[0].DB_MAX_OUTPUT_PORT_TYPE
c_out[2] <= c_out.DB_MAX_OUTPUT_PORT_TYPE
all_done <= all_done.DB_MAX_OUTPUT_PORT_TYPE


